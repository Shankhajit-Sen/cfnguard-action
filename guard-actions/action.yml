name: "cfn-guard-scan-action"
description: "A composite action to run CFN-Guard scan and annotate results"
inputs:
  data:
    description: "Path to the CloudFormation templates"
    required: true
permissions:
  pull-requests: write
  security-events: write
  actions: read
  contents: read
runs:
  using: "composite"
  steps:
    - name: List files in the rules folder for debugging
      run: |
        echo "Listing files in the rules folder:"
        ls -al "cfnguard-action/rules"
      shell: bash

    - name: Validate CloudFormation against the guard rules
      id: validate
      uses: aws-cloudformation/cloudformation-guard@action-v0.0.5
      with:
        rules: "cfnguard-action/rules"
        data: ${{ inputs.data }}
        checkout: false
        create-review: true
        debug: true
    - name: Convert cfn-guard results to SARIF
      if: ${{ failure() && steps.validate.conclusion == 'failure' }}
      run: |
        echo "Creating 'results' directory..."
        mkdir -p results
        echo "Writing cfn-guard results to SARIF file..."
        echo '${{ steps.validate.outputs.result }}' > results/cfn-guard-results.sarif
        echo "SARIF file created. Displaying file details:"
        ls -lh results/
        echo "Displaying SARIF file content:"
        cat results/cfn-guard-results.sarif
      shell: bash
    - name: Debug Validation Outputs
      if: ${{ failure() && steps.validate.conclusion == 'failure' }}
      run: |
        echo "=== Debugging outputs from the 'validate' step ==="
        echo "Output: outputs"
        echo "${{ steps.validate) }}" > result.json
        cat result.json | jq
        echo ""
        echo "Output: result"
        echo "${{ steps.validate.outputs.result }}"
        echo ""
        echo "Output: report"
        echo "${{ steps.validate.outputs.report }}"
        echo ""
        echo "All outputs (JSON):"
        echo '${{ toJSON(steps.validate.outputs) }}'
      shell: bash

    - name: Annotate SARIF results
      if: ${{ failure() && steps.validate.conclusion == 'failure' }}
      uses: SirYwell/sarif-annotator@v0.2.1
      with:
        report-path: results/cfn-guard-results.sarif
        source: qodana
      env:
        DEBUG: "true"

    # Additional debugging: Validate commenting behavior
    - name: Debug SARIF Annotation
      if: ${{ failure() && steps.validate.conclusion == 'failure' }}
      run: |
        echo "Checking if the SARIF annotator processed the results correctly."
        echo "Ensure annotations were added based on the SARIF file."
        echo "GitHub action output and logs will confirm if annotations worked."
      shell: bash
